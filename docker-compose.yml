version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - estechpc_network

  backend:
    build: ./estechbackend
    command: bash -c "python manage.py migrate --noinput && gunicorn --bind 0.0.0.0:8000 config.wsgi:application"
    volumes:
      - ./estechbackend:/app
    env_file:
      - ./estechbackend/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - estechpc_network
    ports:
      - "8000:8000"

  frontend:
    build: ./estechfrontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - estechpc_network

volumes:
  postgres_data:

networks:
  estechpc_network:
    driver: bridge
