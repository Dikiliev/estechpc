version: '3.8'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs:rw
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  backend:
    build: ./estechbackend
    command: gunicorn --bind 0.0.0.0:8000 config.wsgi:application
    volumes:
      - ./estechbackend:/app
    env_file:
      - ./estechbackend/.env
    depends_on:
      - db
    environment:
      VIRTUAL_HOST: api.estechpc.ru
      LETSENCRYPT_HOST: api.estechpc.ru
      LETSENCRYPT_EMAIL: mdikiy069@gmail.com

  frontend:
    build: ./estechfrontend
    volumes:
      - ./estechfrontend:/usr/share/nginx/html
    depends_on:
      - backend
    environment:
      VIRTUAL_HOST: estechpc.ru
      LETSENCRYPT_HOST: estechpc.ru
      LETSENCRYPT_EMAIL: mdikiy069@gmail.com

volumes:
  postgres_data:
  certs:
  vhost.d:
  html:
